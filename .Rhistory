BHPS2000 <- merge(jindresp, jhhresp, by="JHID")
keep_columns <- c("JLKMOVE","JHSPRBQ", "JHSCANB", "JHSCNTB", "JHSCAND", "JHSCNTD","JHSCANF", "JLFSATO")
BHPS <- dplyr::select(BHPS2000, one_of(keep_columns))
dim(BHPS)
describe(BHPS)
complete.cases(BHPS)
data.frame(BHPS[-1], comp = complete.cases(BHPS))
BHPS2 <- filter(BHPS, TRUE, complete.cases(BHPS))
dim(BHPS2)
describe(BHPS2)
summary(BHPS2)
BHPS <- filter(BHPS, TRUE, complete.cases(BHPS))
dim(BHPS)
describe(BHPS)
summary(BHPS)
BHPS$JLKMOVE[BHPS$JLKMOVE< 0]<-NULL
BHPS$JLKMOVE[BHPS$JLKMOVE< 0]<-NA
BHPS$JHSPRBQ[BHPS$JHSPRBQ< 0]<-NA
BHPS$JHSCANB[BHPS$JHSCANB< 0]<-NA
BHPS$JHSCNTB[BHPS$JHSCNTB< 0]<-NA
BHPS$JHSCAND[BHPS$JHSCAND< 0]<-NA
BHPS$JHSCNTD[BHPS$JHSCNTD< 0]<-NA
BHPS$JHSCANF[BHPS$JHSCANF< 0]<-NA
BHPS$JLFSATO[BHPS$JLFSATO< 0]<-NA
summary(BHPS)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(haven, ggplot2,knitr, pander,descr,foreign,dplyr,Hmisc,psych,GPArotation,plyr, dplyr, rmarkdown)
library(tidyverse)
jindresp <- read_sav("/Applications/IODS-final/data/jindresp.sav")
jhhresp <- read_sav("/Applications/IODS-final/data/jhhresp.sav")
BHPS2000 <- merge(jindresp, jhhresp, by="JHID")
# Keeping only the variables that are needed
keep_columns <- c("JLKMOVE","JHSPRBQ", "JHSCANB", "JHSCNTB", "JHSCAND", "JHSCNTD","JHSCANF", "JLFSATO")
BHPS <- dplyr::select(BHPS2000, one_of(keep_columns))
dim(BHPS)
describe(BHPS)
## Renaming values -9 (Missing or wild), -8	 (Inapplicable), -7 (Proxy and or phone), -2 (Refused) and -1 (Don't know) --> NAs
#Removing NAs
complete.cases(BHPS)
data.frame(BHPS[-1], comp = complete.cases(BHPS))
BHPS2 <- filter(BHPS, TRUE, complete.cases(BHPS))
dim(BHPS2)
describe(BHPS2)
summary(BHPS2)
write.csv(BHPS2, file = "/Applications/IODS-final/data/BHPS2.csv")
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2
dim(BHPS2)
describe(BHPS2)
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
p <- ggpairs(BHPS2)
p
p1 <- ggplot(BHPS2, aes(x = JLFSATO, y = JHSPRBQ, col = JHSCANB))
p2 <- p1 + geom_point()
p2
p2
p3 <- p2 + geom_smooth(method = "lm")
p3
p4 <- p3 + ggtitle("Student's attitude versus exam points")
p4
BHPS <- BHPS2
BHPS$JLKMOVE[BHPS$JLKMOVE< 0]<-NA
BHPS$JHSPRBQ[BHPS$JHSPRBQ< 0]<-NA
BHPS$JHSCANB[BHPS$JHSCANB< 0]<-NA
BHPS$JHSCNTB[BHPS$JHSCNTB< 0]<-NA
BHPS$JHSCAND[BHPS$JHSCAND< 0]<-NA
BHPS$JHSCNTD[BHPS$JHSCNTD< 0]<-NA
BHPS$JHSCANF[BHPS$JHSCANF< 0]<-NA
BHPS$JLFSATO[BHPS$JLFSATO< 0]<-NA
summary(BHPS)
p <- ggpairs(BHPS)
p
BHPS <- BHPS[-NA]
str(BHPS$JLKMOVE)
(BHPS$JLKMOVE)
summary(BHPS$JLKMOVE)
dim(BHPS$JLKMOVE)
print(BHPS$JLKMOVE)
BHPS <- select(BHPS - NA)
p <- ggpairs(BHPS)
BHPS <- select(BHPS - NA)
summary(BHPS)
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
p <- ggpairs(BHPS2)
p
BHPS <- BHPS2
BHPS$JLKMOVE[BHPS$JLKMOVE< 0]<-NA
BHPS$JHSPRBQ[BHPS$JHSPRBQ< 0]<-NA
BHPS$JHSCANB[BHPS$JHSCANB< 0]<-NA
BHPS$JHSCNTB[BHPS$JHSCNTB< 0]<-NA
BHPS$JHSCAND[BHPS$JHSCAND< 0]<-NA
BHPS$JHSCANF[BHPS$JHSCANF< 0]<-NA
BHPS$JLFSATO[BHPS$JLFSATO< 0]<-NA
summary(BHPS)
p <- ggpairs(BHPS)
p
complete.cases(BHPS)
data.frame(BHPS[-1], comp = complete.cases(BHPS))
BHPS_new <- filter(BHPS, TRUE, complete.cases(BHPS))
p <- ggpairs(BHPS_new)
p
summary(BHPS_new)
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
BHPS <- BHPS2
BHPS$JLKMOVE[BHPS$JLKMOVE< 0]<-NA
BHPS$JHSPRBQ[BHPS$JHSPRBQ< 0]<-NA
BHPS$JHSCANB[BHPS$JHSCANB< 0]<-NA
BHPS$JHSCNTB[BHPS$JHSCNTB< 0]<-NA
BHPS$JHSCAND[BHPS$JHSCAND< 0]<-NA
BHPS$JHSCNTD[BHPS$JHSCNTD< 0]<-NA
BHPS$JHSCANF[BHPS$JHSCANF< 0]<-NA
BHPS$JLFSATO[BHPS$JLFSATO< 0]<-NA
summary(BHPS)
BHPS$JHSCANB <- as.factor(BHPS$JHSCANB)
BHPS$JHSCAND <- as.factor(BHPS$JHSCAND)
complete.cases(BHPS)
data.frame(BHPS[-1], comp = complete.cases(BHPS))
BHPS_new <- filter(BHPS, TRUE, complete.cases(BHPS))
p <- ggpairs(BHPS_new)
p
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
BHPS <- BHPS2
BHPS$JLKMOVE[BHPS$JLKMOVE< 0]<-NA
BHPS$JHSPRBQ[BHPS$JHSPRBQ< 0]<-NA
BHPS$JHSCANB[BHPS$JHSCANB< 0]<-NA
BHPS$JHSCNTB[BHPS$JHSCNTB< 0]<-NA
BHPS$JHSCNTD[BHPS$JHSCNTD< 0]<-NA
BHPS$JHSCANF[BHPS$JHSCANF< 0]<-NA
BHPS$JLFSATO[BHPS$JLFSATO< 0]<-NA
summary(BHPS)
BHPS$JHSCANB <- as.character(BHPS$JHSCANB)
BHPS$JHSCAND <- as.character(BHPS$JHSCAND)
complete.cases(BHPS)
BHPS_new <- filter(BHPS, TRUE, complete.cases(BHPS))
p <- ggpairs(BHPS_new)
p
summary(BHPS_new)
p1 <- ggplot(BHPS2, aes(x = JLFSATO, y = JHSPRBQ, col = JHSCANB))
p2 <- p1 + geom_point()
p2
p3 <- p2 + geom_smooth(method = "lm")
p3
p3
p4 <- p3 + ggtitle("Student's attitude versus exam points")
p4
p
BHPS$JHSCANB
BHPS$JHSCAND
keep_columns <- c("JLKMOVE","JHSPRBQ", "JHSCANB", "JHSCNTB", "JHSCAND", "JHSCNTD","JHSCANF", "JLFSATO")
BHPS <- dplyr::select(BHPS2000, one_of(keep_columns))
dim(BHPS)
describe(BHPS)
BHPS$JLKMOVE[BHPS$JLKMOVE< 0]<-NA
BHPS$JHSPRBQ[BHPS$JHSPRBQ< 0]<-NA
BHPS$JHSCANB[BHPS$JHSCANB< 0]<-NA
BHPS$JHSCNTB[BHPS$JHSCNTB< 0]<-NA
BHPS$JHSCAND[BHPS$JHSCAND< 0]<-NA
BHPS$JHSCNTD[BHPS$JHSCNTD< 0]<-NA
BHPS$JHSCANF[BHPS$JHSCANF< 0]<-NA
BHPS$JLFSATO[BHPS$JLFSATO< 0]<-NA
summary(BHPS)
BHPS$JHSCANB <- as.character(BHPS$JHSCANB)
BHPS$JHSCAND <- as.character(BHPS$JHSCAND)
complete.cases(BHPS)
data.frame(BHPS[-1], comp = complete.cases(BHPS))
complete.cases(BHPS)
data.frame(BHPS[-1], comp = complete.cases(BHPS))
BHPS2 <- filter(BHPS, TRUE, complete.cases(BHPS))
dim(BHPS2)
describe(BHPS2)
summary(BHPS2)
write.csv(BHPS2, file = "/Applications/IODS-final/data/BHPS2.csv")
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2
dim(BHPS2)
describe(BHPS2)
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
write.csv(BHPS2, file = "/Applications/IODS-final/data/BHPS2.csv")
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2
summary(BHPS2)
BHPS$JHSCANB <- as.character(BHPS$JHSCANB)
BHPS$JHSCAND <- as.character(BHPS$JHSCAND)
complete.cases(BHPS)
data.frame(BHPS[-1], comp = complete.cases(BHPS))
BHPS2 <- filter(BHPS, TRUE, complete.cases(BHPS))
dim(BHPS2)
describe(BHPS2)
summary(BHPS2)
write.csv(BHPS2, file = "/Applications/IODS-final/data/BHPS2.csv")
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2
summary(BHPS2)
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
BHPS$JHSCANB <- as.character(BHPS$JHSCANB)
BHPS$JHSCAND <- as.character(BHPS$JHSCAND)
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
BHPS2$JHSCANB <- as.character(BHPS2$JHSCANB)
BHPS2$JHSCAND <- as.character(BHPS2$JHSCAND)
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
pairs(BHPS2[-1])
pairs(BHPS2[-1], col= BHPS2$JHSCANB)
pairs(BHPS2[-1], col= BHPS2$JLKMOVE)
p <- ggpairs(BHPS2, mapping = aes(col=JHSCANB, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p1 <- ggplot(BHPS2, aes(x = JLFSATO, y = JHSPRBQ, col = JHSCANB))
p2 <- p1 + geom_point()
p2
p2
p3 <- p2 + geom_smooth(method = "lm")
p3 <- p2 + geom_smooth(method = "lm")
p3
p4 <- p3 + ggtitle("Student's attitude versus exam points")
p3 <- p2 + geom_smooth(method = "lm")
p3
p4 <- p3 + ggtitle("Student's attitude versus exam points")
p4
BHPS2$JHSCANB <- as.character(BHPS2$JHSCANB)
BHPS2$JHSCANB[BHPS2$JHSCANB == 1] <- "PAYS WEEK HOLIDAY AWAY"
BHPS2$JHSCANB[BHPS2$JHSCANB == 2] <- "DOESN'T PAY WEEK HOLIDAY AWAY"
BHPS2$JHSCAND <- as.character(BHPS2$JHSCAND)
BHPS2$JHSCAND[BHPS2$JHSCAND == 1] <- "BUYS NEW CLOTHES"
BHPS2$JHSCAND[BHPS2$JHSCAND == 2] <- "DOESN'T BUY NEW CLOTHES"
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
p <- ggpairs(BHPS2, mapping = aes(col=JHSCANB, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
complete.cases(BHPS)
data.frame(BHPS, comp = complete.cases(BHPS))
BHPS2 <- filter(BHPS, TRUE, complete.cases(BHPS))
dim(BHPS2)
describe(BHPS2)
summary(BHPS2)
BHPS$JHSCANB
BHPS$JHSCAND
write.csv(BHPS2, file = "/Applications/IODS-final/data/BHPS2.csv")
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2
summary(BHPS2)
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
BHPS2$JHSCANB <- as.character(BHPS2$JHSCANB)
BHPS2$JHSCANB[BHPS2$JHSCANB == 1] <- "PAYS WEEK HOLIDAY AWAY"
BHPS2$JHSCANB[BHPS2$JHSCANB == 2] <- "DOESN'T PAY WEEK HOLIDAY AWAY"
BHPS2$JHSCAND <- as.character(BHPS2$JHSCAND)
BHPS2$JHSCAND[BHPS2$JHSCAND == 1] <- "BUYS NEW CLOTHES"
BHPS2$JHSCAND[BHPS2$JHSCAND == 2] <- "DOESN'T BUY NEW CLOTHES"
dim(BHPS2)
describe(BHPS2)
BHPS2$JHSCANB
complete.cases(BHPS)
BHPS2 <- filter(BHPS, FALSE, complete.cases(BHPS))
dim(BHPS2)
describe(BHPS2)
summary(BHPS2)
BHPS2 <- filter(BHPS, complete.cases(BHPS))
dim(BHPS2)
describe(BHPS2)
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
p <- ggpairs(BHPS2)
p <- ggpairs(BHPS2)
p
BHPS2$JHSCANB <- as.character(BHPS2$JHSCANB)
BHPS2$JHSCAND <- as.character(BHPS2$JHSCAND)
p <- ggpairs(BHPS2)
p
BHPS2$JHSCANB <- as.numeric(BHPS2$JHSCANB)
BHPS2$JHSCAND <- as.numeric(BHPS2$JHSCAND)
p <- ggpairs(BHPS2)
p
if (!require("pacman")) install.packages("pacman")
pacman::p_load(haven, ggplot2,knitr, pander,descr,foreign,dplyr,Hmisc,psych,GPArotation,plyr, dplyr, rmarkdown)
library(tidyverse)
jindresp <- read_sav("/Applications/IODS-final/data/jindresp.sav")
jhhresp <- read_sav("/Applications/IODS-final/data/jhhresp.sav")
BHPS2000 <- merge(jindresp, jhhresp, by="JHID")
# Keeping only the variables that are needed
keep_columns <- c("JLKMOVE","JHSPRBQ", "JHSCANB", "JHSCNTB", "JHSCAND", "JHSCNTD","JHSCANF", "JLFSATO")
BHPS <- dplyr::select(BHPS2000, one_of(keep_columns))
dim(BHPS)
describe(BHPS)
## Renaming values -9 (Missing or wild), -8	 (Inapplicable), -7 (Proxy and or phone), -2 (Refused) and -1 (Don't know) --> NAs
BHPS$JLKMOVE[BHPS$JLKMOVE< 0]<-NA
BHPS$JHSPRBQ[BHPS$JHSPRBQ< 0]<-NA
BHPS$JHSCANB[BHPS$JHSCANB< 0]<-NA
BHPS$JHSCNTB[BHPS$JHSCNTB< 0]<-NA
BHPS$JHSCAND[BHPS$JHSCAND< 0]<-NA
BHPS$JHSCNTD[BHPS$JHSCNTD< 0]<-NA
BHPS$JHSCANF[BHPS$JHSCANF< 0]<-NA
BHPS$JLFSATO[BHPS$JLFSATO< 0]<-NA
summary(BHPS)
dim(BHPS2)
describe(BHPS2)
summary(BHPS2)
write.csv(BHPS2, file = "/Applications/IODS-final/data/BHPS2.csv")
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
variables <- matrix(c("QUESTION ASKED","If you could choose, would you stay here in your present home or would you prefer to move somewhere else?","Does your accommodation have any of the following problems? Vandalism or crime in the area", "Tell me which things you (and your household) have or do? Pay for a week’s annual holiday away from home.","Would you like to be able to pay for a week’s annual holiday away from home, but must do without because you cannot afford it?", "Tell me which things you (and your household) have or do? Buy new, rather than second hand, clothes.","Would you like to be able to buy new, rather than second hand, clothes, but must do without because you cannot afford it?","Tell me which things you (and your household) have or do? Have friends or family for a drink or meal at least once a month","How dissatisfied or satisfied are you with your life overall?"), ncol = 1, byrow =TRUE)
colnames(variables) <- c("BHPS 2000")
rownames(variables) <- c("VARIABLE NAME", "JLKMOVE", "JHSPRBQ","JHSCANB" , "JHSCNTB","JHSCAND", "JHSCNTD", "JHSCANF", "JLFSATO" )
variables <- as.table(variables)
variables
summary(BHPS2, digits = 2)
BHPS$JHSCANB <- as.character(BHPS$JHSCANB)
BHPS$JHSCAND <- as.character(BHPS$JHSCAND)
complete.cases(BHPS)
data.frame(BHPS, comp = complete.cases(BHPS))
BHPS2 <- filter(BHPS, TRUE, complete.cases(BHPS))
dim(BHPS2)
describe(BHPS2)
summary(BHPS2)
write.csv(BHPS2, file = "/Applications/IODS-final/data/BHPS2.csv")
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
BHPS2000 <- merge(jindresp, jhhresp, by="JHID")
keep_columns <- c("JLKMOVE","JHSPRBQ", "JHSCANB", "JHSCNTB", "JHSCAND", "JHSCNTD","JHSCANF", "JLFSATO")
BHPS <- dplyr::select(BHPS2000, one_of(keep_columns))
dim(BHPS)
describe(BHPS)
jindresp <- read_sav("/Applications/IODS-final/data/jindresp.sav")
jhhresp <- read_sav("/Applications/IODS-final/data/jhhresp.sav")
BHPS2000 <- merge(jindresp, jhhresp, by="JHID")
keep_columns <- c("JLKMOVE","JHSPRBQ", "JHSCANB", "JHSCNTB", "JHSCAND", "JHSCNTD","JHSCANF", "JLFSATO")
BHPS <- dplyr::select(BHPS2000, one_of(keep_columns))
dim(BHPS)
describe(BHPS)
complete.cases(BHPS)
data.frame(BHPS, comp = complete.cases(BHPS))
BHPS2 <- filter(BHPS, TRUE, complete.cases(BHPS))
dim(BHPS2)
describe(BHPS2)
summary(BHPS2)
write.csv(BHPS2, file = "/Applications/IODS-final/data/BHPS2.csv")
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2
BHPS2 <- read.csv(file = "/Applications/IODS-final/data/BHPS2.csv", sep=",")
BHPS2$X <- NULL
dim(BHPS2)
describe(BHPS2)
summary(BHPS2, digits = 2)
p <- ggpairs(BHPS2)
p
p <- ggpairs(BHPS2, mapping = aes(col=JHSCANB, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
BHPS$JHSCANB <- as.character(BHPS$JHSCANB)
p <- ggpairs(BHPS2, mapping = aes(col=JHSCANB, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
BHPS2$JHSCANB <- as.character(BHPS2$JHSCANB)
p <- ggpairs(BHPS2, mapping = aes(col=JHSCANB, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(BHPS2, mapping = aes(alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
Model1 <- lm(JLFSATO~JLKMOVE+JHSPRBQ+JHSCANB+JHSCNTB+JHSCAND+JHSCANF+JHSCNTD, data = BHPS2)
summary(Model1)
Model1 <- lm(JLFSATO~JLKMOVE+JHSPRBQ+JHSCNTB+JHSCAND+JHSCANF+JHSCNTD, data = BHPS2)
Model2 <- lm(JLFSATO~JLKMOVE+JHSPRBQ+JHSCNTB+JHSCAND+JHSCANF+JHSCNTD, data = BHPS2)
summary(Model2)
Model3 <- lm(JLFSATO~JLKMOVE+JHSPRBQ+JHSCNTB+JHSCAND+JHSCNTD, data = BHPS2)
summary(Model2)
Model2 <- lm(JLFSATO~JLKMOVE+JHSPRBQ+JHSCNTB+JHSCAND+JHSCANF+JHSCNTD, data = BHPS2)
summary(Model2)
Model3 <- lm(JLFSATO~JLKMOVE+JHSPRBQ+JHSCNTB+JHSCANF+JHSCNTD, data = BHPS2)
summary(Model2)
Model3 <- lm(JLFSATO~JLKMOVE+JHSPRBQ+JHSCNTB+JHSCANF+JHSCNTD, data = BHPS2)
summary(Model2)
summary(Model3)
qplot(BHPS$JLKMOVE, BHPS$JLFSATO) + geom_smooth(method = "lm")
qplot(BHPS2$JLKMOVE, BHPS2$JLFSATO) + geom_smooth(method = "lm")
qplot(BHPS2$JHSCANF, BHPS2$JLFSATO) + geom_smooth(method = "lm")
ggplot(BHPS2, aes(JLFSATO) + geom_errorbar(ymin=0.03, ymax=0.06, width=.2) + ylim(0, 1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green") +    xlim(0, 1) +  geom_errorbar(ymin=0.01, ymax=0.03, width=.2) + ylim(0, 1)
ggplot(BHPS, aes(JLFSATO)) + stat_summary(fun.y=mean, geom="line") + ylab("predicted life satisfcation") + ylim(0,1) +
ggplot(BHPS, aes(JLFSATO)) + stat_summary(fun.y=mean, geom="line") + ylab("predicted life satisfcation") + ylim(0,1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green") +    xlim(0, 1)
ggplot(BHPS, aes(JLFSATO, JLKMOVE)) + stat_summary(fun.y=mean, geom="line") + ylab("predicted life satisfcation") + ylim(0,1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green") +    xlim(0, 1)
ggplot(BHPS2, aes(JLFSATO, Model3$fitted.values) + geom_errorbar(ymin=0.03, ymax=0.06, width=.2) + ylim(0, 1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green") +    xlim(0, 1) +  geom_errorbar(ymin=0.01, ymax=0.03, width=.2) + ylim(0, 1)
ggplot(BHPS, aes(JLFSATO, JLKMOVE)) + stat_summary(fun.y=mean, geom="line") + ylab("predicted life satisfcation") + ylim(0,1) +
ggplot(BHPS2, aes(JLFSATO, Model3$fitted.values) + geom_errorbar(ymin=0.03, ymax=0.06, width=.2) + ylim(0, 1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green") +    xlim(0, 1) +  geom_errorbar(ymin=0.01, ymax=0.03, width=.2) + ylim(0, 3)
ggplot(BHPS, aes(JLFSATO, JLKMOVE)) + stat_summary(fun.y=mean, geom="line") + ylab("predicted life satisfcation") + ylim(0,1) +
ggplot(BHPS2, aes(JLFSATO, Model3$fitted.values) + geom_errorbar(ymin=0.03, ymax=0.06, width=.2) + ylim(0, 1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green")
ggplot(BHPS2, aes(JLFSATO, Model3$fitted.values) + geom_errorbar(ymin=0.03, ymax=0.06, width=.2) + ylim(0, 1) +
ggplot(BHPS2$JLFSATO, Model3$fitted.values)
ggplot(BHPS2, aes(JLFSATO, Model3$fitted.values))
ggplot(BHPS2, aes(JLFSATO, Model3$fitted.values) + geom_errorbar(ymin=0.03, ymax=0.06, width=.2) + ylim(0, 1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green")+    xlim(0, 1) +  geom_errorbar(ymin=0.01, ymax=0.03, width=.2) + ylim(0, 3))
ggplot(BHPS2, aes(JLFSATO, Model3$fitted.values) + geom_errorbar(ymin=0.03, ymax=0.06, width=.2) + ylim(0, 1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green")+    xlim(0, 1))
ggplot(BHPS2, aes(JLFSATO, Model3$fitted.values) + geom_errorbar(ymin=0.03, ymax=0.06, width=.2) + ylim(0, 1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green")+    xlim(0, 1))
ggplot(BHPS2, aes(JLFSATO, Model3$fitted.values)  + ylim(0, 1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green")+    xlim(0, 1))
ggplot(BHPS, aes(JLFSATO, JLKMOVE)) + stat_summary(fun.y=mean, geom="line") + ylab("predicted life satisfcation") + ylim(0,1) +
geom_segment(x = 0, xend = 1, y = 0.52 + 0.01, yend = 0.52 + 0.01*1, colour="green") +    xlim(0, 1)
p1 <- ggplot(BHPS2, aes(x = BHPS2$JLFSATO, y = BHPS2$JHSCANF,  col = BHPS$JHSPRBQ))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's attitude versus exam points")
print(p4)
p5 <- ggplot(BHPS2, aes(x = JHSPRBQ, y = JHSCANF, col = JLFSATO))
p6 <- p5 + geom_point()
p7 <- p6 + geom_smooth(method = "lm")
p8 <- p7 + ggtitle("Student's learning approach (surface) versus age")
p8
?ggplot()
p5 <- ggplot(BHPS2, aes(x = JHSPRBQ, y = JHSCANF, col = JLFSATO))
p6 <- p5 + geom_point()
p7 <- p6 + geom_smooth(method = "lm")
p8 <- p7 + ggtitle("Impact of quality of neigbourhood and connections with family/friends to one's life satisfaction") + xlab("Vandalism/crime in one's neigbourhood") + ylab("Dinner/drink with family or friends once a month")
p8
p5 <- ggplot(BHPS2, aes(x = JHSCNTB, y = JHSCNTD, col = JLFSATO))
p6 <- p5 + geom_point()
p7 <- p6 + geom_smooth(method = "lm")
p8 <- p7 + ggtitle("Impact of capabilities to one's life satisfaction") + xlab("capability to to pay holidays") + ylab("capability to buy new clothes")
p8
gather(BHPS2) %>% ggplot(aes(value)) +  geom_bar() + facet_wrap("key", scales = "free")  + theme(axis.text.x = element_text(angle =45, hjust = 1, size = 8))
mca <- MCA(BHPS2, graph = FALSE)
library(FactoMineR)
mca <- MCA(BHPS2, graph = FALSE)
mca <- MCA(BHPS2, graph = FALSE)
?MCA()
require(MASS)
require(dplyr)
mca <- MCA(BHPS2, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
BHPS2$JLKMOVE <- as.factor(BHPS2$JLKMOVE)
BHPS2$JLKMOVE <- as.factor(BHPS2$JLKMOVE)
BHPS2$JLKMOVE <- as.factor(BHPS2$JLKMOVE)
BHPS2$JLFSATO <- as.factor(BHPS2$JLFSATO)
BHPS2$JHSCANF <- as.factor(BHPS2$JHSCANF)
BHPS2$JHSCNTD <- as.factor(BHPS2$JHSCNTD)
BHPS2$JHSCAND <- as.factor(BHPS2$JHSCAND)
BHPS2$JHSCNTB <- as.factor(BHPS2$JHSCNTB)
BHPS2$JHSCANB <- as.factor(BHPS2$JHSCANB)
BHPS2$JHSPRBQ <- as.factor(BHPS2$JHSPRBQ)
mca <- MCA(BHPS2, graph = FALSE)
mca <- MCA(BHPS2, graph = FALSE)
summary(mca)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
BHPS2_std <- scale(BHPS2)
?plot()
plot(mac)
BHPS2$JLKMOVE <- as.factor(BHPS2$JLKMOVE)
BHPS2$JLFSATO <- as.factor(BHPS2$JLFSATO)
BHPS2$JHSCANF <- as.factor(BHPS2$JHSCANF)
BHPS2$JHSCNTD <- as.factor(BHPS2$JHSCNTD)
BHPS2$JHSCAND <- as.factor(BHPS2$JHSCAND)
BHPS2$JHSCNTB <- as.factor(BHPS2$JHSCNTB)
BHPS2$JHSCANB <- as.factor(BHPS2$JHSCANB)
BHPS2$JHSPRBQ <- as.factor(BHPS2$JHSPRBQ)
mca <- MCA(BHPS2, graph = FALSE)
summary(mca)
plot(mac)
plot(mca)
plot(mca, habillage = "quali")
gather(BHPS2) %>% ggplot(aes(value)) +  geom_bar() + facet_wrap("key", scales = "free")  + theme(axis.text.x = element_text(angle =45, hjust = 1, size = 8))
require("tidyr")
download.packages("tidyr")
library(tidyr)
library(dplyr)
gather(BHPS2) %>% ggplot(aes(value)) +  geom_bar() + facet_wrap("key", scales = "free")  + theme(axis.text.x = element_text(angle =45, hjust = 1, size = 8))
summary(BHPS2, digits = 2)
